<?php

/**
 * @file
 * Module file for contribkanban_boards.
 */

use Drupal\contribkanban_boards\Entity\BoardListInterface;
use Drupal\contribkanban_boards\FieldHelper;
use Drupal\Core\Field\EntityReferenceFieldItemListInterface;
use Drupal\Core\Site\Settings;

/**
 * Implements hook_theme().
 */
function contribkanban_boards_theme($existing, $type, $theme, $path) {
  return [
    'board' => [
      'render element' => 'elements',
    ],
    'board_list' => [
      'render element' => 'elements',
    ],
    'field__board__lists' => [
      'base hook' => 'field',
    ],
    'board_form' => [
      'render element' => 'form',
    ],
    'board_list_form' => [
      'render element' => 'form',
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function contribkanban_boards_node_board_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  /** @var \Drupal\contribkanban_boards\Entity\NodeBoard $board */
  $board = $entity;
  $build['#attached']['drupalSettings']['board'] = [
    'nids' => FieldHelper::stringAsJson($board->get('nids')),
    'uuid' => $board->uuid(),
  ];
  $build['output'] = [
    '#markup' => \Drupal\Core\Render\Markup::create('<div id="NodeBoard" style="position: relative;height: 100%;"></div>'),
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function contribkanban_boards_board_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  $build['#attached']['drupalSettings']['board'] = [];

  /** @var \Drupal\contribkanban_boards\Entity\BoardInterface $board */
  $board = $entity;

  $route_match = \Drupal::routeMatch();
  $version_parameter = $route_match->getParameter('version');
  if ($version_parameter && strpos($version_parameter, '-dev') === FALSE) {
    $version_parameter .= '-dev';
  }

  $lists = $board->get('lists');
  assert($lists instanceof EntityReferenceFieldItemListInterface);
  foreach ($lists->referencedEntities() as $board_list) {
    assert($board_list instanceof BoardListInterface);
    $attributes['title'] = $board_list->label();
    $attributes['projects'] = FieldHelper::stringAsJson($board_list->getProjects());
    $attributes['category'] = FieldHelper::stringAsJson($board_list->getCategory());
    $attributes['component'] = FieldHelper::stringAsJson($board_list->getComponent());
    $attributes['parent'] = FieldHelper::stringAsJson($board_list->getParentIssue());
    $attributes['priority'] = FieldHelper::stringAsJson($board_list->getPriority());
    $attributes['statuses'] = FieldHelper::stringAsJson($board_list->getStatuses());
    $attributes['tag'] = FieldHelper::stringAsJson($board_list->getTags());
    $version = $board_list->getVersion();
    if ($version_parameter) {
      $version->appendItem($version_parameter);
    }
    $attributes['version'] = FieldHelper::stringAsJson($version);
    $build['#attached']['drupalSettings']['board'][] = $attributes;
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function contribkanban_boards_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  if ($entity_form['#entity_type'] == 'board_list') {
    $entity_form['#theme'] = ['board_list_form'];
    $entity_form['#attached']['library'][] = 'contribkanban_boards/form';
  }
}

/**
 * Implements hook_page_attachments().
 */
function contribkanban_boards_page_attachments(array &$attachments) {

  $ga_id = Settings::get('google_analytics_id');
  if (!\Drupal::getContainer()->get('router.admin_context')->isAdminRoute()) {
    $script = <<<SCRIPT
    <script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
ga('create', '$ga_id', 'auto');
ga('send', 'pageview');
</script>
SCRIPT;

    $attachments['#attached']['html_head'][] = [
      [
        '#tag' => 'script',
        '#value' => $script,
        '#weight' => -100,
      ],
      'gtag_script',
    ];

  }
}

