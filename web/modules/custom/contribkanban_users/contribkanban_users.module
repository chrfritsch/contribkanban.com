<?php

use Drupal\Component\Serialization\Json;
use Drupal\contribkanban_users\GravatarFieldItemList;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\Plugin\Field\FieldType\StringItem;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function contribkanban_users_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
  $form['actions']['forgot'] = [
    '#type' => 'link',
    '#title' => t('Forgot password?'),
    '#url' => \Drupal\Core\Url::fromRoute('user.pass'),
    '#attributes' => [
      'class' => [
        'button',
        'is-link'
      ],
    ],
  ];
  $form['actions']['signup'] = [
    '#type' => 'link',
    '#title' => t('Create an Account'),
    '#url' => \Drupal\Core\Url::fromRoute('user.register'),
    '#attributes' => [
      'class' => [
        'button',
        'is-white',
      ],
    ],
  ];
}

/**
 * Implements hook_js_settings_alter().
 */
function contribkanban_users_js_settings_alter(array &$settings, \Drupal\Core\Asset\AttachedAssetsInterface $assets)
{
  $user = \Drupal::currentUser();
  $settings['user']['email'] = $user->getEmail();
  $settings['user']['gravatar'] = md5(strtolower(trim($user->getEmail())));
}

/**
 * Implements hook_entity_base_field_info().
 */
function contribkanban_users_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type)
{
  if ($entity_type->id() == 'user') {
    $fields = [];
    $fields['drupalorg_username'] = BaseFieldDefinition::create('string')
      ->setLabel(new TranslatableMarkup('Drupal.org username'))
      ->setDescription(new TranslatableMarkup('Your Drupal.org username, used to provide a board based on issues you follow.'))
      ->setSetting('max_length', 255)
      ->setDisplayOptions('form', [
        'type'   => 'string_textfield',
        'weight' => -5,
      ]);
    $fields['drupalorg_uid'] = BaseFieldDefinition::create('string')
      ->setLabel(new TranslatableMarkup('Drupal.org UID'))
      ->setDescription(new TranslatableMarkup('Hidden field which stores the UID for the Drupal.org user.'))
      ->setSetting('max_length', 255);

    $fields['mail_hash'] = BaseFieldDefinition::create('string')
      ->setLabel(new TranslatableMarkup('Email Hash'))
      ->setDescription(new TranslatableMarkup('Email hash for Gravatar'))
      ->setClass(GravatarFieldItemList::class)
      ->setComputed(TRUE);
    return $fields;
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function contribkanban_users_user_presave(Drupal\Core\Entity\EntityInterface $entity)
{
  if ($entity instanceof \Drupal\user\UserInterface) {
    // If the uid is not cached, see if a username is provided and cache it.
    if ($entity->get('drupalorg_uid')->isEmpty()) {
      // Can only work if there is a username...
      if (!$entity->get('drupalorg_username')->isEmpty()) {
        $api_client = \Drupal::getContainer()->get('drupalorg_client');
        $field_username = $entity->get('drupalorg_username')->first();
        assert($field_username instanceof StringItem);
        $response = $api_client->get('user.json?name=' . $field_username->get('value')->getValue());
        $data = Json::decode($response->getBody()->getContents());
        if (!empty($data['list'])) {
          $entity->get('drupalorg_uid')->setValue($data['list'][0]['uid']);
        }
      }
    }
  }
}
